# Installation en dev

git clone https://github.com/PhRaz/dichipot.git
update .env.local file with credentials
update .env.local file with APP_ENV=dev
docker-compose build
docker-compose up -d
docker exec -it dichipot_php bash
cd dichipot
composer install
composer require encore (tester sans cette ligne)
yarn install
yarn encore dev
php bin/console cache:clear
php bin/console doctrine:schema:update --force

## restore the db

aws configure ... 
cd /home/ec2-user/dichipot
file=201906110030
aws s3 cp s3://dichipot/$file.sql.gz .
gunzip $file.sql.gz
sudo mv $file.sql .docker/data/db/
docker exec -it dichipot_mysql bash
mysql -uroot -proot sf4 </var/lib/mysql/$file.sql

# Installation en prod

sudo yum update -y
sudo yum install git -y
sudo yum install docker -y
sudo usermod -a -G docker ec2-user
sudo service docker start
sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
logout/login
git clone https://github.com/PhRaz/dichipot.git
cd dichipot
docker-compose build
sudo dd if=/dev/zero of=/var/swapfile bs=1M count=2048 &&
sudo chmod 600 /var/swapfile &&
sudo mkswap /var/swapfile &&
echo /var/swapfile none swap defaults 0 0 | sudo tee -a /etc/fstab &&
sudo swapon -a
docker-compose up -d

docker exec -it dichipot_php bash
cd dichipot
composer install --no-dev --optimize-autoloader
yarn install
yarn encore production
update .env (crendentials aws et ENV=prod)
php bin/console doctrine:schema:update --force
exit

restore the db

cp .docker/prod/config/vhosts/dichipot.conf .docker/config/vhosts/dichipot.conf

> crontab -e
MAILTO="philippe.razavet@gmail.com"
30 0 * * * docker exec dichipot_mysql mysqldump -uroot -proot sf4 | gzip - | aws s3 cp - s3://dichipot/$(date +\%Y\%m\%d\%H\%M).sql.gz

sudo tar -cvzf - dichipot/certs | aws s3 cp - s3://dichipot/certs_$(date +\%Y\%m\%d\%H\%M).tar.gz

# installation certificat SSL en prod

mettre à jour l'EIP sur la nouvelle instance ec2 pour avoir le nomde domaine en face de dichipot.com

cd; cd dichipot
mkdir certs
mkdir data

docker run -it --rm \
-v /home/ec2-user/dichipot/certs:/etc/letsencrypt \
-v /home/ec2-user/dichipot/data:/data/letsencrypt \
certbot/certbot certonly \
--webroot --webroot-path=/data/letsencrypt -d dichipot.com --email admin@dichipot.com --agree-tos

sudo tar -cvzf - certs | aws s3 cp - s3://dichipot-certs/certs_$(date +\%Y\%m\%d\%H\%M).tar.gz

Pour le renouvellement c'est la même commande.
