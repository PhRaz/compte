# Installation en dev

git clone https://github.com/PhRaz/dichipot.git
update .env.local file with credentials
update .env.local file with APP_ENV=dev
docker-compose build
docker-compose up -d
docker exec -it dichipot_php bash
cd dichipot
composer install
composer require encore (tester sans cette ligne)
yarn install
yarn encore dev
php bin/console cache:clear
php bin/console doctrine:schema:update --force

## restore the db

aws configure ... 
cd /home/ec2-user/dichipot
aws s3 cp s3://dichipot/xxx.sql.gz .
gunzip xxx.sql.gz
sudo mv xxx.sql .docker/data/db/
docker exec -it dichipot_mysql bash
mysql -uroot -proot sf4 </var/lib/mysql/xxx.sql

# Installation en prod

sudo yum update -y
sudo yum install git -y
sudo yum install docker -y
sudo usermod -a -G docker ec2-user
sudo service docker start
sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
logout/login
git clone https://github.com/PhRaz/dichipot.git
cd dichipot
docker-compose build
sudo dd if=/dev/zero of=/var/swapfile bs=1M count=2048 &&
sudo chmod 600 /var/swapfile &&
sudo mkswap /var/swapfile &&
echo /var/swapfile none swap defaults 0 0 | sudo tee -a /etc/fstab &&
sudo swapon -a
docker-compose up -d

docker exec -it dichipot_php bash
cd dichipot
composer install --no-dev --optimize-autoloader
yarn install
yarn encore production
update .env (crendentials aws et ENV=prod)
php bin/console doctrine:schema:update --force
exit

restore the db

> crontab -e
MAILTO="philippe.razavet@gmail.com"
30 0 * * * docker exec dichipot_mysql mysqldump -uroot -proot sf4 | gzip - | aws s3 cp - s3://dichipot/$(date +\%Y\%m\%d\%H\%M).sql.gz

installation certificat SSL

wget https://dl.eff.org/certbot-auto
sudo mv certbot-auto /usr/local/bin/certbot-auto
sudo chown root /usr/local/bin/certbot-auto
sudo chmod 0755 /usr/local/bin/certbot-auto

sudo /usr/local/bin/certbot-auto --debug -v --server https://acme-v01.api.letsencrypt.org/directory certonly -d dichipot.com
on utilise le serveur local pour la proc√©dure d'installation :
Input the webroot for dichipot.com: (Enter 'c' to cancel): /home/wwwroot/dichipot/public

docker exec -it dichipot_apache bash
les fichiers de certification :
/etc/letsencrypt/live/dichipot.com/fullchain.pem
/etc/letsencrypt/live/dichipot.com/privkey.pem
    cd /etc/apache2/sites-available
sed -i 's|/etc/ssl/certs/ssl-cert-snakeoil.pem|/etc/letsencrypt/live/dichipot.com/fullchain.pem|' default-ssl.conf

sed -i 's/#SSLCertificateChainFile/SSLCertificateChainFile/' default-ssl.conf
